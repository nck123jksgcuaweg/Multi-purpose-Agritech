
<!DOCTYPE html>
<html lang="en">
<?php
session_start();
if (!isset($_SESSION["user_id"])) {
    header("Location: login.php"); // Redirect if not logged in
    exit();
}
?>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solar AgriTech</title>
    <link rel="stylesheet" type="text/css" href="design1.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="code1.js"></script>
</head>

<body>



<div class="container">
    <header>
        <h1>Solar AgriTech</h1>
        <div class="profile-section">
            <img src="avatar.png" alt="Profile" class="avatar">
            <button class="logout-button" onclick="logout()">
                <img src="logout.png" alt="Logout" width="30" height="30">
            </button>
        </div>
    </header>

    <div class="sidebar">
        <h2>SolarAgriTech</h2>
        <ul>
            <li><a href="#" onclick="showTable('machine-status')">Dashboard</a></li>
            <li><a href="#" onclick="showTable('seed-monitor-table')">Seed Monitor</a></li>
            <li><a href="#" onclick="showTable('water-level-table')">Water Level</a></li>
            <li><a href="#" onclick="showTable('battery-table')">Battery Level</a></li>
            <li><a href="#" onclick="showTable('area-covered-table')">Area Covered</a></li>
            <li><a href="#" onclick="showTable('setting')">Settings</a></li>
        </ul>
    </div>

    <!-- Machine Status Section with Pie Charts -->
    <section class="machine-status">
        <div class="status-card">
            <h3>Battery Level</h3>
            <canvas id="batteryChart"></canvas>
        </div>
        <div class="status-card">
            <h3>Water Level</h3>
            <canvas id="waterChart"></canvas>
        </div>
        <div class="status-card">
            <h3>Soil Level</h3>
            <canvas id="solarChart"></canvas>
        </div>
        <div class="status-card">
            <h3>Seed Level</h3>
            <canvas id="seedChart"></canvas>
        </div>
    </section>




<!-- Water Level Table -->
<table id="water-level-table" class="data-table" style="display: none;">
    <thead>
        <tr>
            <th>Water Level (cm)</th>
            <th>Water Amount (L)</th>
            <th>Timestamp</th>
        </tr>
    </thead>
    <tbody id="water-level-table-body"></tbody>

</table>

<!-- Seed Monitor Table -->
<table id="seed-monitor-table" class="data-table" style="display: none;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Seed Level (%)</th>
            <th>Timestamp</th>
        </tr>
    </thead>
    <tbody id="seed-monitor-table-body"></tbody>
</table>

<!-- Battery Level Table -->
<table id="battery-table" class="data-table" style="display: none;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Battery Level (%)</th>
            <th>Timestamp</th>
        </tr>
    </thead>
    <tbody id="battery-table-body"></tbody>
</table>

<!-- Area Covered Table -->
<table id="area-covered-table" class="data-table" style="display: none;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Area Covered (m²)</th>
            <th>Timestamp</th>
        </tr>
    </thead>
    <tbody id="area-covered-table-body"></tbody>
</table>

<table id="setting" class="settings-table" style="display:none;">


<iframe id="dataIframe" src="fetch_data.php" 
    width="90%" height="600px" 
    style="
        display: block;
        margin: 30px auto;
        border-radius: 20px;
        border: none;
        overflow: hidden;
        backdrop-filter: blur(12px);
        background: rgba(255, 255, 255, 0.15);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease-in-out;">
</iframe>




//code1.php
document.getElementById("toggle-btn").addEventListener("click", function() {
    const loginForm = document.getElementById("login-form");
    const registerForm = document.getElementById("register-form");
    const formTitle = document.getElementById("form-title");

    if (loginForm.style.display === "none") {
        loginForm.style.display = "block";
        registerForm.style.display = "none";
        formTitle.innerText = "Login";
        this.innerText = "Register";
    } else {
        loginForm.style.display = "none";
        registerForm.style.display = "block";
        formTitle.innerText = "Register";
        this.innerText = "Login";
    }
});
document.getElementById("register-form").addEventListener("submit", function(event) {
    let password = document.getElementById("password").value;
    let confirmPassword = document.getElementById("confirm-password").value;
    let errorMessage = document.getElementById("password-error");

    if (password !== confirmPassword) {
        errorMessage.style.display = "block";
        event.preventDefault(); // Stop form submission
    } else {
        errorMessage.style.display = "none";
    }
});



//for sidebar
function showTable(tableId) {
    let allTables = document.querySelectorAll(".data-table, .settings-table"); 
    let statusSection = document.querySelector(".machine-status"); 

    // Hide all tables and sections
    allTables.forEach(table => table.style.display = "none");
    statusSection.style.display = "none"; 

    // Show the selected table
    let selectedTable = document.getElementById(tableId);
    if (selectedTable) {
        selectedTable.style.display = "table"; 
    }

    // If "Dashboard" is clicked, show the machine status section again
    if (tableId === "machine-status") {
        statusSection.style.display = "flex";
    }

    // Fetch the correct data when a section is selected
    if (tableId === "water-level-table") fetchWaterLevelData();
    if (tableId === "seed-monitor-table") fetchSeedMonitorData();
    if (tableId === "battery-table") fetchBatteryData();
    if (tableId === "area-covered-table") fetchAreaCoveredData();
}




//for login
function logout() {
    window.location.href = 'login.php';
}

 // Prevent back navigation after logout
 window.history.pushState(null, "", window.location.href);
 window.onpopstate = function() {
     window.history.pushState(null, "", window.location.href);
 };

 // Logout Function
 function logout() {
     window.location.href = 'logout.php';
 }


 


 
// Add event listener sa "Water Level" button
document.getElementById("water-level-btn").addEventListener("click", function() {
    showIframe();
});

// Add event listener sa ibang buttons para mawala ang iframe
document.querySelectorAll(".sidebar ul li button").forEach(button => {
    if (button.id !== "water-level-btn") {
        button.addEventListener("click", function() {
            hideIframe();
        });
    }
});



function fetchWaterLevelData() {
    fetch("fetch_data.php")
        .then(response => response.json())
        .then(data => {
            let tableBody = document.getElementById("water-level-table-body");
            tableBody.innerHTML = ""; // Clear previous data

            data.forEach(entry => {
                let row = `<tr>
                    <td>${entry.id}</td>
                    <td>${entry.water_level} cm</td>
                    <td>${entry.water_amount} L</td>
                    <td>${entry.timestamp}</td>
                </tr>`;
                tableBody.innerHTML += row;
            });
        })
        .catch(error => console.error("❌ Error fetching Water Level data:", error));
}

// Refresh Water Level data every 5 seconds
setInterval(fetchWaterLevelData, 5000);




 
//water 
fetch('fetch_data.php')
.then(response => response.json())
.then(data => {
    let tableBody = document.getElementById('water-level-table-body');
    tableBody.innerHTML = ""; // Clear existing data

    data.forEach(entry => {
        let row = `<tr>
            <td>${entry.id}</td>
            <td>${entry.water_level} cm</td>
            <td>${entry.water_amount} L</td>
            <td>${entry.timestamp}</td>
        </tr>`;
        tableBody.innerHTML += row;
    });
})
.catch(error => console.error("Error fetching data:", error));


// Refresh data every 5 seconds
setInterval(fetchWaterLevelData, 5000);


// Fetch Seed Monitor Data
function fetchSeedMonitorData() {
    fetch('seed_level.php')
    .then(response => response.json())
    .then(data => {
        let tableBody = document.getElementById('seed-monitor-table-body');
        tableBody.innerHTML = "";

        data.forEach(entry => {
            let row = `<tr>
                <td>${entry.id}</td>
                <td>${entry.seed_level} %</td>
                <td>${entry.timestamp}</td>
            </tr>`;
            tableBody.innerHTML += row;
        });
    })
    .catch(error => console.error("Error fetching Seed Monitor data:", error));
}

// Fetch Battery Level Data
function fetchBatteryData() {
    fetch('battery_level.php')
    .then(response => response.json())
    .then(data => {
        let tableBody = document.getElementById('battery-table-body');
        tableBody.innerHTML = "";

        data.forEach(entry => {
            let row = `<tr>
                <td>${entry.id}</td>
                <td>${entry.battery_level} %</td>
                <td>${entry.timestamp}</td>
            </tr>`;
            tableBody.innerHTML += row;
        });
    })
    .catch(error => console.error("Error fetching Battery data:", error));
}

// Fetch Area Covered Data
function fetchAreaCoveredData() {
    fetch('area_coverage.php')
    .then(response => response.json())
    .then(data => {
        let tableBody = document.getElementById('area-covered-table-body');
        tableBody.innerHTML = "";

        data.forEach(entry => {
            let row = `<tr>
                <td>${entry.id}</td>
                <td>${entry.area_covered} m²</td>
                <td>${entry.timestamp}</td>
            </tr>`;
            tableBody.innerHTML += row;
        });
    })
    .catch(error => console.error("Error fetching Area Covered data:", error));
}

// Refresh data every 5 seconds
setInterval(fetchSeedMonitorData, 5000);
setInterval(fetchBatteryData, 5000);
setInterval(fetchAreaCoveredData, 5000);








//design1.php
/* Root Variables for Theme */
:root {
  --primary-color: #1a2b3c;
  --secondary-color: #2c3e50;
  --accent-color: #d4d4d4;
  --background-color: #ffffff;
  --card-bg: #ffffff;
  --text-color: #333;
  --success-color: #2ecc71;
  --danger-color: #e74c3c;
  --shadow-color: rgba(0, 0, 0, 0.2);
  --hover-bg: #ecf0f1;
}

/* Global Reset */
* {
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
}

.container {
  max-width: 1400px;
  margin: 0;
  padding: 0 20px;
}

header {
  color: #000000;
  margin: 0;
  padding: 0 20px;
  padding: 10px;
  border-radius: 10px;
}

/* Dashboard Styles */
.dashboard {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px;
}

.status-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 15px;
  margin-top: 10px;
}

.status-card {
  background-color: #1a1a50;
  color: white;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
  width: 150px;
  height: 120px;
}

.history-panel {
  position: absolute;
  right: 20px;
  top: 20px;
  background-color: #3575a6;
  padding: 15px;
  border-radius: 10px;
  width: 150px;
}

.close-btn {
  background: none;
  border: none;
  color: white;
  font-size: 16px;
  cursor: pointer;
}

/* Profile Section */
.profile-section {
  display: flex;
  align-items: center;
  position: absolute;
  top: 10px;
  right: 20px;
}

.avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  margin-right: 10px;
}

.logout-button {
  background: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.logout-button i {
  font-size: 24px;
  color: #e74c3c;
  transition: color 0.3s;
}

.logout-button:hover i {
  color: #c0392b;
}


h1, h2 {
  margin-bottom: 15px;
  font-size: 2rem;
}

/* Cards for Machine Status */
.machine-status {
  display: flex;
  justify-content: space-between;
  gap: 20px;
  margin: 30px 0;
  flex-wrap: wrap;
}

.status-card {
  background: var(--card-bg);
  border-radius: 15px;
  box-shadow: 0 5px 15px var(--shadow-color);
  padding: 20px;
  text-align: center;
  width: 23%;
  transition: all 0.3s ease;
  position: relative;
  background: #507288;
  box-shadow: 20px;
}

.status-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 8px 20px var(--shadow-color);
}

.status-card h3 {
  margin-bottom: 15px;
  font-size: 1.2rem;
  color: var(--primary-color);
}

canvas {
  margin: 10px 0;
}

/* Controls Section */
.controls {
  background: var(--card-bg);
  padding: 20px;
  border-radius: 15px;
  box-shadow: 0 4px 10px var(--shadow-color);
  margin-bottom: 30px;
  display: flex;
  justify-content: space-around;
  gap: 20px;
}

.btn {
  background-color: var(--accent-color);
  color: #fff;
  padding: 12px 20px;
  margin: 10px;
  border: none;
  border-radius: 5px;
  font-size: 16px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  flex: 1;
  justify-content: center;
}

.btn:hover {
  background-color: var(--secondary-color);
  transform: translateY(-2px);
}

.btn i {
  font-size: 18px;
}

/* Tables */
table {
  text-align: center;
}
td, th {
  padding: 10px;
}


th {
  background: var(--secondary-color);
  color: #fff;
}

tr:nth-child(even) {
  background-color: #f9f9f9;
}

tr:hover {
  background-color: var(--hover-bg);
}



@media (max-width: 768px) {
  .status-card {
      width: 48%;
  }
}

@media (max-width: 480px) {
  .status-card {
      width: 100%;
  }

  .btn {
      width: 100%;
      text-align: center;
  }

  .controls {
      flex-direction: column;
  }
}


/* Sidebar */
.sidebar {
  width: 250px;
  height: 100vh;
  background: var(--primary-color);
  color: #f8f5f5;
  position: fixed;
  top: 0;
  left: 0;
  padding: 20px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  box-shadow: 2px 0 10px var(--shadow-color);
}

.sidebar h2 {
  text-align: center;
  margin-bottom: 20px;
  font-size: 1.5rem;
}

.sidebar ul {
  list-style: none;
  padding: 0;
}

.sidebar ul li {
  padding: 15px;
  border-radius: 5px;
  margin-bottom: 10px;
  transition: background 0.3s;
  cursor: pointer;
}

.sidebar ul li:hover {
  background: #245688;
}

.sidebar ul li a {
  color: #fff;
  text-decoration: none;
  font-size: 1rem;
  display: block;
}
/* Highlight active sidebar button */
.sidebar ul li a.active {
  background-color: #2c3e50;
  color: white;
  font-weight: bold;
}


/* Improve table readability */
.data-table tbody tr:nth-child(even) {
  background-color: #f2f2f2;
}


/* Main content adjusted for sidebar */
.container {
  margin-left: 270px; /* Adjusted for sidebar */
  width: calc(100% - 270px);
  max-width: none;
  padding: 20px;
}

/* Responsive Sidebar */
@media (max-width: 768px) {
  .sidebar {
      width: 200px;
  }

  .container {
      margin-left: 220px;
      width: calc(100% - 220px);
  }
}

@media (max-width: 480px) {
  .sidebar {
      width: 180px;
      padding: 15px;
  }

  .container {
      margin-left: 190px;
      width: calc(100% - 190px);
  }
}


table {
  width: 100%;
  border-collapse: collapse;
  background: #ffffff;
}

th, td {
  padding: 10px;
  border: 1px solid #ddd;
  text-align: left;
}

th {
  background: #2c3e50;
  color: white;
}

tr:nth-child(even) {
  background: #f9f9f9;
}

tr:hover {
  background: #ecf0f1;
}
                                                                                                      